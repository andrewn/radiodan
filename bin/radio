#!/usr/bin/env ruby
require 'rubygems'
require 'bundler/setup'

require 'pathname'
require 'yaml'

ROOT = File.join(File.dirname(__FILE__), '..')

require_relative '../lib/radio'

$PROGRAM_NAME = 'radio_server'

EM.synchrony do  
  config = YAML.load_file(File.join(ROOT, 'config.yml'))
  @radio = Radio.new(config)
  
  # graceful shutdown of service
  # also stops MPD
=begin
  %w{INT TERM SIGHUP SIGINT SIGTERM}.each do |signal|
    Signal.trap(signal) do
      puts "Trapped #{signal}"
      EM::Synchrony.next_tick do
        begin
          @radio.stop
        ensure
          EM.stop
        end
      end
    end
  end
=end

  EM.error_handler do |e|
    puts "Error raised during event loop: #{e.message}"
    puts e.backtrace.join("\n")
  end
  
  EM::Synchrony.next_tick do
    @radio.start
  end
  
  
  EM::Synchrony.next_tick do
    require 'socket'
    SocketFile = File.join(File.dirname(__FILE__), '../tmp/socket')
    puts 'unix'
    server = UNIXServer.new('/tmp/file.sock')
    server.accept

    EM.now_and_every(seconds: 0.5) do
      puts msg
      msg = "HELLOFROMSERVER\n"
      server.sendio(msg)
    end
  end
end
